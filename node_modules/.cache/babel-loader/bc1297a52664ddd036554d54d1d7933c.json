{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIC\\\\Desktop\\\\ReactandRailsOJT\\\\outline-create-too-mdy_nodockerSLA\\\\app\\\\javascript\\\\components\\\\items\\\\_item.jsx\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport { Breadcrumb, Layout, message, Input, Button, Space, Alert } from \"antd\";\nimport I18n from \"i18n-js\";\nimport \"../../bundles/i18n/ja.js\";\nimport SideBar from \"../home/_sideBar\";\nimport ItemTable from \"./_item_table.jsx\";\nimport ItemForm from \"./_item_form.jsx\";\nimport axios from \"axios\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nvar Content = Layout.Content;\n\nvar Item = /*#__PURE__*/function (_React$Component) {\n  _inherits(Item, _React$Component);\n\n  var _super = _createSuper(Item);\n\n  function Item(props) {\n    var _this;\n\n    _classCallCheck(this, Item);\n\n    _this = _super.call(this, props);\n\n    _this.handleClose = function () {\n      _this.setState(function () {\n        return {\n          setVisible: false // successMessage: null,\n\n        };\n      });\n    };\n\n    _this.onFinish = function (item) {\n      // 挿入条件と更新条件の管理\n      // itemのidがない場合は 挿入条件をします。\n      if (item.id == undefined) {\n        axios.post(\"/api/v1/item\", {\n          item: item\n        }).then(function (response) {\n          console.log(\"insert success = \", response.data.successMessage); // this.setState(() => ({\n          //   successMessage: response.data.successMessage,\n          // }));\n\n          console.log(\"state success sms = \", _this.state.successMessage);\n\n          _this.componentDidMount();\n\n          message.success(response.data.successMessage);\n\n          _this.clearForm();\n        }); // if (this.state.successMessage != null) {\n        //   console.log(\"success handle message\");\n        //   this.setState(() => ({\n        //     setVisible: true,\n        //   }));\n        // }\n      } // itemのidがある場合は 更新条件をします。\n      // 更新条件\n      else {\n        axios.post(\"/api/v1/item/update/\".concat(item.id), {\n          item: item\n        }) // .then((response) => response.json())\n        .then(function (response) {\n          _this.setState(function () {\n            return {\n              successMessage: response.data.successMessage\n            };\n          });\n\n          _this.componentDidMount();\n\n          message.success(\" 更新が成功しました。\");\n\n          _this.clearForm();\n\n          console.log(\"updatesuccess\", response.successMessage);\n        });\n      }\n    };\n\n    _this.deleteItem = function (id) {\n      var url = \"api/v1/items/\".concat(id);\n      fetch(url, {\n        method: \"delete\"\n      }).then(function (response) {\n        console.log(\"delete data ===\", response);\n\n        _this.setState({\n          items: _this.state.items.filter(function (item) {\n            return item.key !== id;\n          })\n        });\n\n        message.success(\" アイテム削除の成功しました。\");\n\n        _this.setState(function () {\n          return {\n            successMessage: response.successMessage\n          };\n        });\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.formRef = /*#__PURE__*/React.createRef();\n\n    _this.edit = function (record) {\n      var _this$formRef$current;\n\n      (_this$formRef$current = _this.formRef.current) === null || _this$formRef$current === void 0 ? void 0 : _this$formRef$current.setFieldsValue({\n        id: record.id,\n        name: record.name,\n        price: record.price,\n        size_id: record.size_id,\n        company_name: record.company,\n        country: record.country,\n        // manafacture_date: moment(record.manafacture_date, \"YYYY MM DD\"),\n        email: record.email,\n        remark: record.remark,\n        company_id: record.company_id\n      });\n    };\n\n    _this.getColumnSearchProps = function (dataIndex) {\n      return {\n        filterDropdown: function filterDropdown(_ref) {\n          var setSelectedKeys = _ref.setSelectedKeys,\n              selectedKeys = _ref.selectedKeys,\n              confirm = _ref.confirm,\n              clearFilters = _ref.clearFilters;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: 8\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(Input, {\n            ref: function ref(node) {\n              _this.searchInput = node;\n            },\n            placeholder: \"\\u691C\\u7D22 \".concat(dataIndex),\n            value: selectedKeys[0],\n            onChange: function onChange(e) {\n              return setSelectedKeys(e.target.value ? [e.target.value] : []);\n            },\n            onPressEnter: function onPressEnter() {\n              return _this.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            style: {\n              marginBottom: 8,\n              display: \"block\"\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 9\n            }\n          }), /*#__PURE__*/React.createElement(Space, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            type: \"primary\",\n            onClick: function onClick() {\n              return _this.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }\n            }),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 11\n            }\n          }, \"\\u691C\\u7D22\"), /*#__PURE__*/React.createElement(Button, {\n            onClick: function onClick() {\n              return _this.handleReset(clearFilters);\n            },\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 11\n            }\n          }, \"\\u30EA\\u30BB\\u30C3\\u30C8\"), /*#__PURE__*/React.createElement(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: function onClick() {\n              confirm({\n                closeDropdown: false\n              });\n\n              _this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 11\n            }\n          }, \"\\u30D5\\u30A3\\u30EB\\u30BF\\u30FC\")));\n        },\n        filterIcon: function filterIcon(filtered) {\n          return /*#__PURE__*/React.createElement(SearchOutlined, {\n            style: {\n              color: filtered ? \"#1890ff\" : undefined\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 7\n            }\n          });\n        },\n        onFilter: function onFilter(value, record) {\n          return record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\";\n        },\n        onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n          if (visible) {\n            setTimeout(function () {\n              return _this.searchInput.select();\n            }, 100);\n          }\n        },\n        render: function render(text) {\n          return _this.state.searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n            highlightStyle: {\n              backgroundColor: \"#ffc069\",\n              padding: 0\n            },\n            searchWords: [_this.state.searchText],\n            autoEscape: true,\n            textToHighlight: text ? text.toString() : \"\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 9\n            }\n          }) : text;\n        }\n      };\n    };\n\n    _this.handleSearch = function (selectedKeys, confirm, dataIndex) {\n      confirm();\n\n      _this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    _this.handleReset = function (clearFilters) {\n      clearFilters();\n\n      _this.setState({\n        searchText: \"\"\n      });\n    };\n\n    _this.handleMessage = function () {\n      if (_this.state.successMessage != null) {\n        console.log(\"success handle message\");\n      }\n    };\n\n    _this.state = {\n      items: [],\n      size: [],\n      company: [],\n      searchText: \"\",\n      searchedColumn: \"\",\n      successMessage: null,\n      visible: true,\n      setVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"componentDidMount\",\n    value: // リストのデータを表示条件\n    function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        items: [],\n        size: [],\n        // company: null,\n        searchText: \"\",\n        searchedColumn: \"\",\n        successMessage: null,\n        setVisible: false\n      });\n      axios.get(\"api/v1/item.json\").then(function (response) {\n        _this2.setState(function () {\n          return {\n            size: response.data.sizes // company: response.data.companies,\n\n          };\n        }); // popup データを表示するため\n\n\n        console.log(\"before state com data = \", response.data.companies);\n        response.data.companies.forEach(function (companyData) {\n          var newCompany = {\n            key: companyData.id,\n            id: companyData.id,\n            company_name: companyData.company_name\n          };\n          console.log(\"company data = \", newCompany);\n\n          _this2.setState(function (prevState) {\n            return {\n              company: [].concat(_toConsumableArray(prevState.company), [newCompany])\n            };\n          });\n        }); // response.data.companies.map((companyData) => {\n        //   const newCompany = {\n        //     key: companyData.id,\n        //     id: companyData.id,\n        //     name: companyData.company_name,\n        //   };\n        //   console.log(\"company data = \", newCompany);\n        //   this.setState((prevState) => ({\n        //     company: [...prevState.items, newCompany],\n        //   }));\n        // });\n\n        console.log(\"company data after loop = \", _this2.state.company); // アイテムー管理テーブルリストに表示するため\n\n        console.log(\"item data = \", response.data.items);\n        response.data.items.forEach(function (item) {\n          var newItem = {\n            key: item.item_id,\n            id: item.item_id,\n            name: item.name,\n            price: item.price,\n            size: item.size,\n            company: item.company_name,\n            country: item.country,\n            // manafacture_date: item.manafacture_date,\n            email: item.email,\n            company_id: item.company_id,\n            remark: item.remark,\n            size_id: item.size_id\n          };\n\n          _this2.setState(function (prevState) {\n            return {\n              items: [].concat(_toConsumableArray(prevState.items), [newItem])\n            };\n          });\n        });\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    } // フォームクリア機能\n\n  }, {\n    key: \"clearForm\",\n    value: function clearForm() {\n      var _this$formRef$current2;\n\n      (_this$formRef$current2 = this.formRef.current) === null || _this$formRef$current2 === void 0 ? void 0 : _this$formRef$current2.setFieldsValue({\n        id: null,\n        name: null,\n        price: null,\n        size_id: \"一つ選択してください\",\n        country: null,\n        // manafacture_date: \"日付を選択してください\",\n        company_name: \"一つ選択してください\",\n        email: null,\n        remark: null,\n        company_id: null\n      });\n    } // データの挿入と更新\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Layout, {\n        style: {\n          minHeight: \"100vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SideBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Layout, {\n        className: \"site-layout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Content, {\n        style: {\n          margin: \"0 16px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        style: {\n          margin: \"16px 0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }\n      }, I18n.t(\"home.home\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }\n      }, I18n.t(\"home.menu1.side2\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"site-layout-background\",\n        style: {\n          padding: 24,\n          minHeight: 360\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }\n      }, this.state.visible ? /*#__PURE__*/React.createElement(Alert, {\n        message: this.state.successMessage,\n        type: \"success\",\n        closable: true,\n        afterClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }\n      }) : null, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ItemForm // 挿入と更新機能を呼び出してフォームコンポーネントを形成します。\n      , {\n        onFinish: this.onFinish // 更新したいデータを更新フォームに設定する機能を呼び出してフォームコンポーネントを形成します。\n        ,\n        componentEdit: this.formRef // 挿入と更新のフォームに設定するアイテムサイズマスターデータをフォームコンポーネントへ送る。\n        ,\n        itemSize: this.state.size // 挿入と更新のフォームに設定するアイテムサイズマスターデータをフォームコンポーネントへ送る。\n        ,\n        company: this.state.company,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ItemTable // アイテムー管理テーブルリストに表示するアイテムデータをテーブルコンポーネントへ送る。\n      , {\n        items: this.state.items // 更新したいデータを更新フォームに設定する機能をテーブルコンポーネントから呼び出す。\n        ,\n        edit: this.edit // アイテムー管理テーブルリストに表示するアイテムデータを消す機能をテーブルコンポーネントから呼び出す。\n        ,\n        \"delete\": this.deleteItem // アイテムー管理テーブルリストに表示するアイテムデータを検索する機能をテーブルコンポーネントから呼び出す。\n        ,\n        filter: this.getColumnSearchProps,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Item;\n}(React.Component);\n\nexport default Item;","map":{"version":3,"sources":["C:/Users/GIC/Desktop/ReactandRailsOJT/outline-create-too-mdy_nodockerSLA/app/javascript/components/items/_item.jsx"],"names":["React","Breadcrumb","Layout","message","Input","Button","Space","Alert","I18n","SideBar","ItemTable","ItemForm","axios","Highlighter","SearchOutlined","moment","Content","Item","props","handleClose","setState","setVisible","onFinish","item","id","undefined","post","then","response","console","log","data","successMessage","state","componentDidMount","success","clearForm","deleteItem","url","fetch","method","items","filter","key","error","formRef","createRef","edit","record","current","setFieldsValue","name","price","size_id","company_name","company","country","email","remark","company_id","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","marginBottom","display","width","handleReset","closeDropdown","searchText","searchedColumn","filterIcon","filtered","color","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","handleMessage","size","get","sizes","companies","forEach","companyData","newCompany","prevState","newItem","item_id","minHeight","margin","t","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Breadcrumb, Layout, message, Input, Button, Space, Alert } from \"antd\";\r\nimport I18n from \"i18n-js\";\r\nimport \"../../bundles/i18n/ja.js\";\r\nimport SideBar from \"../home/_sideBar\";\r\nimport ItemTable from \"./_item_table.jsx\";\r\nimport ItemForm from \"./_item_form.jsx\";\r\nimport axios from \"axios\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nconst { Content } = Layout;\r\nclass Item extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      size: [],\r\n      company: [],\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      successMessage: null,\r\n      visible: true,\r\n      setVisible: false,\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState(() => ({\r\n      setVisible: false,\r\n      // successMessage: null,\r\n    }));\r\n  };\r\n\r\n  // リストのデータを表示条件\r\n  componentDidMount() {\r\n    this.setState({\r\n      items: [],\r\n      size: [],\r\n      // company: null,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      successMessage: null,\r\n      setVisible: false,\r\n    });\r\n    axios\r\n      .get(\"api/v1/item.json\")\r\n      .then((response) => {\r\n        this.setState(() => ({\r\n          size: response.data.sizes,\r\n          // company: response.data.companies,\r\n        }));\r\n\r\n        // popup データを表示するため\r\n        console.log(\"before state com data = \", response.data.companies);\r\n        response.data.companies.forEach((companyData) => {\r\n          const newCompany = {\r\n            key: companyData.id,\r\n            id: companyData.id,\r\n            company_name: companyData.company_name,\r\n          };\r\n          console.log(\"company data = \", newCompany);\r\n          this.setState((prevState) => ({\r\n            company: [...prevState.company, newCompany],\r\n          }));\r\n        });\r\n        // response.data.companies.map((companyData) => {\r\n        //   const newCompany = {\r\n        //     key: companyData.id,\r\n        //     id: companyData.id,\r\n        //     name: companyData.company_name,\r\n        //   };\r\n        //   console.log(\"company data = \", newCompany);\r\n        //   this.setState((prevState) => ({\r\n        //     company: [...prevState.items, newCompany],\r\n        //   }));\r\n        // });\r\n        console.log(\"company data after loop = \", this.state.company);\r\n        // アイテムー管理テーブルリストに表示するため\r\n        console.log(\"item data = \", response.data.items);\r\n        response.data.items.forEach((item) => {\r\n          const newItem = {\r\n            key: item.item_id,\r\n            id: item.item_id,\r\n            name: item.name,\r\n            price: item.price,\r\n            size: item.size,\r\n            company: item.company_name,\r\n            country: item.country,\r\n            // manafacture_date: item.manafacture_date,\r\n            email: item.email,\r\n            company_id: item.company_id,\r\n            remark: item.remark,\r\n            size_id: item.size_id,\r\n          };\r\n          this.setState((prevState) => ({\r\n            items: [...prevState.items, newItem],\r\n          }));\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  // フォームクリア機能\r\n  clearForm() {\r\n    this.formRef.current?.setFieldsValue({\r\n      id: null,\r\n      name: null,\r\n      price: null,\r\n      size_id: \"一つ選択してください\",\r\n      country: null,\r\n      // manafacture_date: \"日付を選択してください\",\r\n      company_name: \"一つ選択してください\",\r\n      email: null,\r\n      remark: null,\r\n      company_id: null,\r\n    });\r\n  }\r\n\r\n  // データの挿入と更新\r\n  onFinish = (item) => {\r\n    // 挿入条件と更新条件の管理\r\n    // itemのidがない場合は 挿入条件をします。\r\n    if (item.id == undefined) {\r\n      axios.post(\"/api/v1/item\", { item }).then((response) => {\r\n        console.log(\"insert success = \", response.data.successMessage);\r\n        // this.setState(() => ({\r\n        //   successMessage: response.data.successMessage,\r\n        // }));\r\n        console.log(\"state success sms = \", this.state.successMessage);\r\n        this.componentDidMount();\r\n        message.success(response.data.successMessage);\r\n        this.clearForm();\r\n      });\r\n      // if (this.state.successMessage != null) {\r\n      //   console.log(\"success handle message\");\r\n      //   this.setState(() => ({\r\n      //     setVisible: true,\r\n      //   }));\r\n      // }\r\n    }\r\n    // itemのidがある場合は 更新条件をします。\r\n    // 更新条件\r\n    else {\r\n      axios\r\n        .post(`/api/v1/item/update/${item.id}`, { item })\r\n        // .then((response) => response.json())\r\n        .then((response) => {\r\n          this.setState(() => ({\r\n            successMessage: response.data.successMessage,\r\n          }));\r\n          this.componentDidMount();\r\n          message.success(\" 更新が成功しました。\");\r\n          this.clearForm();\r\n          console.log(\"updatesuccess\", response.successMessage);\r\n        });\r\n    }\r\n  };\r\n\r\n  // 削除条件\r\n  deleteItem = (id) => {\r\n    const url = `api/v1/items/${id}`;\r\n    fetch(url, {\r\n      method: \"delete\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"delete data ===\", response);\r\n        this.setState({\r\n          items: this.state.items.filter((item) => item.key !== id),\r\n        });\r\n        message.success(\" アイテム削除の成功しました。\");\r\n        this.setState(() => ({\r\n          successMessage: response.successMessage,\r\n        }));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  // 提出された値をフォームに設定するために使用する。\r\n  formRef = React.createRef();\r\n  // 更新したいデータを更新フォームに設定します。\r\n  edit = (record) => {\r\n    this.formRef.current?.setFieldsValue({\r\n      id: record.id,\r\n      name: record.name,\r\n      price: record.price,\r\n      size_id: record.size_id,\r\n      company_name: record.company,\r\n      country: record.country,\r\n      // manafacture_date: moment(record.manafacture_date, \"YYYY MM DD\"),\r\n      email: record.email,\r\n      remark: record.remark,\r\n      company_id: record.company_id,\r\n    });\r\n  };\r\n\r\n  // データのフィルタリングと検索する機能\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        {/* 検索するため入力フィールド */}\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`検索 ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ marginBottom: 8, display: \"block\" }}\r\n        />\r\n\r\n        <Space>\r\n          {/* 検索するボタン */}\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            検索\r\n          </Button>\r\n\r\n          {/* リセットするボタン */}\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            リセット\r\n          </Button>\r\n\r\n          {/* フィルターするボタン */}\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            フィルター\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  // 検索するボタンを押す時作業する機能\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  // リセットするボタンを押す時作業する機能\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  handleMessage = () => {\r\n    if (this.state.successMessage != null) {\r\n      console.log(\"success handle message\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <SideBar />\r\n        <Layout className=\"site-layout\">\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n              <Breadcrumb.Item>{I18n.t(\"home.home\")}</Breadcrumb.Item>\r\n              <Breadcrumb.Item>{I18n.t(\"home.menu1.side2\")}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: 24, minHeight: 360 }}\r\n            >\r\n              {/* 成功したメッセージを表す。 */}\r\n              {this.state.visible ? (\r\n                <Alert\r\n                  message={this.state.successMessage}\r\n                  type=\"success\"\r\n                  closable\r\n                  afterClose={this.handleClose}\r\n                />\r\n              ) : null}\r\n\r\n              <br />\r\n\r\n              {/* 挿入フォームのコンポーネントを呼び出す。 */}\r\n              <ItemForm\r\n                // 挿入と更新機能を呼び出してフォームコンポーネントを形成します。\r\n                onFinish={this.onFinish}\r\n                // 更新したいデータを更新フォームに設定する機能を呼び出してフォームコンポーネントを形成します。\r\n                componentEdit={this.formRef}\r\n                // 挿入と更新のフォームに設定するアイテムサイズマスターデータをフォームコンポーネントへ送る。\r\n                itemSize={this.state.size}\r\n                // 挿入と更新のフォームに設定するアイテムサイズマスターデータをフォームコンポーネントへ送る。\r\n                company={this.state.company}\r\n              />\r\n              {/* テーブルのコンポーネントを呼び出す。 */}\r\n              <ItemTable\r\n                // アイテムー管理テーブルリストに表示するアイテムデータをテーブルコンポーネントへ送る。\r\n                items={this.state.items}\r\n                // 更新したいデータを更新フォームに設定する機能をテーブルコンポーネントから呼び出す。\r\n                edit={this.edit}\r\n                // アイテムー管理テーブルリストに表示するアイテムデータを消す機能をテーブルコンポーネントから呼び出す。\r\n                delete={this.deleteItem}\r\n                // アイテムー管理テーブルリストに表示するアイテムデータを検索する機能をテーブルコンポーネントから呼び出す。\r\n                filter={this.getColumnSearchProps}\r\n              />\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nexport default Item;\r\n"]},"metadata":{},"sourceType":"module"}