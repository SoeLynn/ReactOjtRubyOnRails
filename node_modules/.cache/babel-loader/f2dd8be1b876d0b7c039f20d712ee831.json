{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIC\\\\Desktop\\\\ReactandRailsOJT\\\\outline-create-too-mdy_nodockerSLA\\\\app\\\\javascript\\\\components\\\\items\\\\_item_form.jsx\",\n    _this = this;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, Fragment } from \"react\";\nimport { Form, Input, Button, Select, DatePicker, InputNumber, Modal, Radio, Table } from \"antd\";\nimport I18n from \"i18n-js\";\nvar Search = Input.Search; // import moment from \"moment\";\n\nvar ItemForm = function ItemForm(_ref) {\n  var onFinish = _ref.onFinish,\n      componentEdit = _ref.componentEdit,\n      itemSize = _ref.itemSize,\n      company = _ref.company,\n      excelExport = _ref.excelExport;\n\n  // モーダルフォームの管理\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setIsModalVisible = _useState2[1]; // popupフィールドのテーブルにデータを設定する。\n\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableData = _useState4[0],\n      setColumnData = _useState4[1]; // const [tableColumn, setColumn] = useState(null);\n  // const columns = null;\n  //  popupフィールドのテーブルにデータの中で選んだデータをフォームの社会項目に設定する。\n\n\n  var _onChange = function onChange(value) {\n    var _componentEdit$curren;\n\n    (_componentEdit$curren = componentEdit.current) === null || _componentEdit$curren === void 0 ? void 0 : _componentEdit$curren.setFieldsValue({\n      company_name: value.company_name,\n      company_id: value.id\n    }); // モーダルフォームを閉じる機能をする。\n\n    setIsModalVisible(false);\n  }; // モーダルフォームを表示する機能をする。\n  // const showModal = () => {\n  //   setIsModalVisible(true);\n  //   // この機能を作業するとpopupフィールド\n  // のテーブルにデータを設定する。\n  //   setColumnData(company);\n  //   //\n  // };\n  // モーダルフォームを閉じる機能をする。\n\n\n  var handleOk = function handleOk() {\n    setIsModalVisible(false);\n  }; // モーダルフォームを閉じる機能をする\n\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  }; // popupフィールドの設定するデータを検索するため設定する入力フィールド\n\n\n  var searchField = /*#__PURE__*/React.createElement(Form.Item, {\n    label: I18n.t(\"item.company\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    key: \"1\",\n    name: \"searchData\",\n    onChange: function onChange(e) {\n      return handleSearch(e.target.value ? [e.target.value] : []);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  })); // popupフィールドのデータを検索した後結果を保つするためこのarrayを作りました。\n\n  var companies = []; // popupフィールドの設定するデータを検索する。\n\n  var handleSearch = function handleSearch(searchData) {\n    for (var i = 0; i < company.length; i++) {\n      var _company$i$company_na, _searchData$toString;\n\n      if ((_company$i$company_na = company[i].company_name) !== null && _company$i$company_na !== void 0 && _company$i$company_na.toLowerCase().includes((_searchData$toString = searchData.toString()) === null || _searchData$toString === void 0 ? void 0 : _searchData$toString.toLowerCase())) {\n        companies.push(company[i]);\n      }\n    } // popupフィールドのデータを検索した結果をpopupフィールドのテーブルに表示する。\n\n\n    setColumnData(companies);\n  }; // companyデータをRadioボタンで管理する。\n\n\n  var handleSelect = function handleSelect(selectData) {\n    console.log(\"0-----hello----\", selectData); // モーダルフォームを表示する機能をする。\n\n    setIsModalVisible(true); // この機能を作業するとpopupフィールドのテーブルにデータを設定する。\n\n    setColumnData(company); //\n    // if (selectData == \"\") {\n    //   console.log(\"1-----hello----\", selectData);\n    //   columns.push([\n    //     {\n    //       title: \"アクション\",\n    //       key: \"action\",\n    //       ReadOnly: false,\n    //       render: (_text, record) => (\n    //         <Fragment>\n    //           <Radio\n    //             key={record.company_id}\n    //             value={record.company_id}\n    //             onChange={() => onChange(record)}\n    //           ></Radio>\n    //         </Fragment>\n    //       ),\n    //     },\n    //     {\n    //       title: I18n.t(\"item.company\"),\n    //       dataIndex: \"company_name\",\n    //       key: \"company_id\",\n    //     },\n    //   ]);\n    // } else {\n    //   for (var i = 0; i < company.length; i++) {\n    //     if (company[i].company_name?.includes(selectData.toString())) {\n    //       console.log(\"had data\", selectData);\n    //       columns.push([\n    //         {\n    //           title: \"アクション\",\n    //           key: \"action\",\n    //           ReadOnly: false,\n    //           render: (_text, record) => (\n    //             <Fragment>\n    //               {() => handleCompanyRadio(record)}\n    //               <Radio\n    //                 key={record.company_id}\n    //                 onChange={() => onChange(record)}\n    //                 value={selectData}\n    //                 checked={true}\n    //               ></Radio>\n    //             </Fragment>\n    //           ),\n    //         },\n    //         {\n    //           title: I18n.t(\"item.company\"),\n    //           dataIndex: \"company_name\",\n    //           key: \"company_id\",\n    //         },\n    //       ]);\n    //     }\n    //   }\n    // }\n\n    console.log(\"column\", columns);\n  }; // manage company data with radio button action\n  // const handleCompanyRadio = (record) => {\n  //   <Radio\n  //     key={record.company_id}\n  //     value={record.company_id}\n  //     onChange={() => onChange(record)}\n  //   ></Radio>;\n  // }\n  // popupフィールドの設定するデータテーブルをつくる。\n\n\n  columns = [{\n    title: \"アクション\",\n    key: \"action\",\n    render: function render(_text, record) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        key: record.company_id,\n        value: record.company_id,\n        onChange: function onChange() {\n          return _onChange(record);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    title: I18n.t(\"item.company\"),\n    dataIndex: \"company_name\",\n    key: \"company_id\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    onFinish: onFinish,\n    ref: componentEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \" \",\n    name: \"id\",\n    style: {\n      display: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: I18n.t(\"item.itemName\"),\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: I18n.t(\"validation.message\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"60%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: I18n.t(\"item.itemPrice\"),\n    name: \"price\",\n    rules: [{\n      required: true,\n      message: I18n.t(\"validation.message\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    style: {\n      width: \"60%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: I18n.t(\"item.itemSize\"),\n    name: \"size_id\",\n    rules: [{\n      required: true,\n      message: I18n.t(\"validation.message\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"\\u4E00\\u3064\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n    style: {\n      width: \"60%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, itemSize.map(function (value) {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: value.id,\n      value: value.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, value.size);\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: I18n.t(\"item.itemCountry\"),\n    name: \"country\",\n    rules: [{\n      required: true,\n      message: I18n.t(\"validation.message\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"60%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: I18n.t(\"item.company\"),\n    name: \"company_name\",\n    rules: [{\n      required: true,\n      message: I18n.t(\"validation.message\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    allowClear: true,\n    enterButton: \"\\u691C\\u7D22\",\n    size: \"medium\",\n    style: {\n      width: \"60%\"\n    },\n    onSearch: handleSelect.bind(_this),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: I18n.t(\"item.email\"),\n    name: \"email\",\n    rules: [{\n      type: \"email\",\n      message: I18n.t(\"validation.email\")\n    }, {\n      required: true,\n      message: I18n.t(\"validation.message\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"60%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: I18n.t(\"item.remark\"),\n    name: \"remark\",\n    rules: [{\n      max: 20,\n      message: I18n.t(\"validation.remark\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    style: {\n      width: \"60%\",\n      resize: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \" \",\n    name: \"company_id\",\n    style: {\n      display: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: {\n      offset: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, I18n.t(\"common.button.save\")), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginLeft: 30\n    },\n    type: \"primary\",\n    htmlType: \"button\",\n    onClick: excelExport,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, I18n.t(\"common.button.excel-export\")))), /*#__PURE__*/React.createElement(Modal, {\n    title: \"\\u4F1A\\u793E\\u4E00\\u9023\",\n    visible: isModalVisible // モーダルフォームを閉じる機能を呼び出す。\n    ,\n    onOk: handleOk // モーダルフォームを閉じる機能を呼び出す。\n    ,\n    onCancel: handleCancel,\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      onClick: handleCancel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 18\n      }\n    }, \"\\u30AA\\u30FC\\u30B1\\u30FC\")],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }, searchField, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: hello(),\n    dataSource: tableData,\n    pagination: {\n      pageSize: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ItemForm;","map":{"version":3,"sources":["C:/Users/GIC/Desktop/ReactandRailsOJT/outline-create-too-mdy_nodockerSLA/app/javascript/components/items/_item_form.jsx"],"names":["React","useState","Fragment","Form","Input","Button","Select","DatePicker","InputNumber","Modal","Radio","Table","I18n","Search","ItemForm","onFinish","componentEdit","itemSize","company","excelExport","isModalVisible","setIsModalVisible","tableData","setColumnData","onChange","value","current","setFieldsValue","company_name","company_id","id","handleOk","handleCancel","searchField","t","e","handleSearch","target","companies","searchData","i","length","toLowerCase","includes","toString","push","handleSelect","selectData","console","log","columns","title","key","render","_text","record","dataIndex","span","display","required","message","width","map","size","bind","type","max","resize","offset","marginLeft","hello","pageSize"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  InputNumber,\r\n  Modal,\r\n  Radio,\r\n  Table,\r\n} from \"antd\";\r\nimport I18n from \"i18n-js\";\r\nconst { Search } = Input;\r\n// import moment from \"moment\";\r\nconst ItemForm = ({\r\n  onFinish,\r\n  componentEdit,\r\n  itemSize,\r\n  company,\r\n  excelExport,\r\n}) => {\r\n  // モーダルフォームの管理\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  // popupフィールドのテーブルにデータを設定する。\r\n  const [tableData, setColumnData] = useState(null);\r\n  // const [tableColumn, setColumn] = useState(null);\r\n  // const columns = null;\r\n  //  popupフィールドのテーブルにデータの中で選んだデータをフォームの社会項目に設定する。\r\n  const onChange = (value) => {\r\n    componentEdit.current?.setFieldsValue({\r\n      company_name: value.company_name,\r\n      company_id: value.id,\r\n    });\r\n    // モーダルフォームを閉じる機能をする。\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // モーダルフォームを表示する機能をする。\r\n  // const showModal = () => {\r\n  //   setIsModalVisible(true);\r\n  //   // この機能を作業するとpopupフィールド\r\n  // のテーブルにデータを設定する。\r\n  //   setColumnData(company);\r\n  //   //\r\n  // };\r\n\r\n  // モーダルフォームを閉じる機能をする。\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // モーダルフォームを閉じる機能をする\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // popupフィールドの設定するデータを検索するため設定する入力フィールド\r\n  const searchField = (\r\n    <Form.Item label={I18n.t(\"item.company\")}>\r\n      <Input\r\n        key=\"1\"\r\n        name=\"searchData\"\r\n        onChange={(e) => handleSearch(e.target.value ? [e.target.value] : [])}\r\n      ></Input>\r\n    </Form.Item>\r\n  );\r\n\r\n  // popupフィールドのデータを検索した後結果を保つするためこのarrayを作りました。\r\n  const companies = [];\r\n\r\n  // popupフィールドの設定するデータを検索する。\r\n  const handleSearch = (searchData) => {\r\n    for (var i = 0; i < company.length; i++) {\r\n      if (\r\n        company[i].company_name\r\n          ?.toLowerCase()\r\n          .includes(searchData.toString()?.toLowerCase())\r\n      ) {\r\n        companies.push(company[i]);\r\n      }\r\n    }\r\n    // popupフィールドのデータを検索した結果をpopupフィールドのテーブルに表示する。\r\n    setColumnData(companies);\r\n  };\r\n\r\n  // companyデータをRadioボタンで管理する。\r\n  const handleSelect = (selectData) => {\r\n    console.log(\"0-----hello----\", selectData);\r\n    // モーダルフォームを表示する機能をする。\r\n    setIsModalVisible(true);\r\n    // この機能を作業するとpopupフィールドのテーブルにデータを設定する。\r\n    setColumnData(company);\r\n\r\n    //\r\n    // if (selectData == \"\") {\r\n    //   console.log(\"1-----hello----\", selectData);\r\n    //   columns.push([\r\n    //     {\r\n    //       title: \"アクション\",\r\n    //       key: \"action\",\r\n    //       ReadOnly: false,\r\n    //       render: (_text, record) => (\r\n    //         <Fragment>\r\n    //           <Radio\r\n    //             key={record.company_id}\r\n    //             value={record.company_id}\r\n    //             onChange={() => onChange(record)}\r\n    //           ></Radio>\r\n    //         </Fragment>\r\n    //       ),\r\n    //     },\r\n    //     {\r\n    //       title: I18n.t(\"item.company\"),\r\n    //       dataIndex: \"company_name\",\r\n    //       key: \"company_id\",\r\n    //     },\r\n    //   ]);\r\n    // } else {\r\n    //   for (var i = 0; i < company.length; i++) {\r\n    //     if (company[i].company_name?.includes(selectData.toString())) {\r\n    //       console.log(\"had data\", selectData);\r\n    //       columns.push([\r\n    //         {\r\n    //           title: \"アクション\",\r\n    //           key: \"action\",\r\n    //           ReadOnly: false,\r\n    //           render: (_text, record) => (\r\n    //             <Fragment>\r\n    //               {() => handleCompanyRadio(record)}\r\n    //               <Radio\r\n    //                 key={record.company_id}\r\n    //                 onChange={() => onChange(record)}\r\n    //                 value={selectData}\r\n    //                 checked={true}\r\n    //               ></Radio>\r\n    //             </Fragment>\r\n    //           ),\r\n    //         },\r\n    //         {\r\n    //           title: I18n.t(\"item.company\"),\r\n    //           dataIndex: \"company_name\",\r\n    //           key: \"company_id\",\r\n    //         },\r\n    //       ]);\r\n    //     }\r\n    //   }\r\n    // }\r\n    console.log(\"column\", columns);\r\n  };\r\n\r\n  // manage company data with radio button action\r\n  // const handleCompanyRadio = (record) => {\r\n  //   <Radio\r\n  //     key={record.company_id}\r\n  //     value={record.company_id}\r\n  //     onChange={() => onChange(record)}\r\n  //   ></Radio>;\r\n  // }\r\n\r\n  // popupフィールドの設定するデータテーブルをつくる。\r\n  columns = [\r\n    {\r\n      title: \"アクション\",\r\n      key: \"action\",\r\n      render: (_text, record) => (\r\n        <Fragment>\r\n          <Radio\r\n            key={record.company_id}\r\n            value={record.company_id}\r\n            onChange={() => onChange(record)}\r\n          ></Radio>\r\n        </Fragment>\r\n      ),\r\n    },\r\n    {\r\n      title: I18n.t(\"item.company\"),\r\n      dataIndex: \"company_name\",\r\n      key: \"company_id\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {/* フォーム設定 */}\r\n      <Form\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={onFinish}\r\n        ref={componentEdit}\r\n      >\r\n        {/* 番号フィールド */}\r\n        <Form.Item label=\" \" name=\"id\" style={{ display: \"none\" }}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/* アイテム名前フィールド */}\r\n        <Form.Item\r\n          label={I18n.t(\"item.itemName\")}\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: I18n.t(\"validation.message\"),\r\n            },\r\n          ]}\r\n        >\r\n          <Input style={{ width: \"60%\" }} />\r\n        </Form.Item>\r\n\r\n        {/* アイテム価格フィールド */}\r\n        <Form.Item\r\n          label={I18n.t(\"item.itemPrice\")}\r\n          name=\"price\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: I18n.t(\"validation.message\"),\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber style={{ width: \"60%\" }} />\r\n        </Form.Item>\r\n\r\n        {/* アイテムサイズフィールド */}\r\n        <Form.Item\r\n          label={I18n.t(\"item.itemSize\")}\r\n          name=\"size_id\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: I18n.t(\"validation.message\"),\r\n            },\r\n          ]}\r\n        >\r\n          <Select defaultValue=\"一つ選択してください\" style={{ width: \"60%\" }}>\r\n            {itemSize.map((value) => (\r\n              <Select.Option key={value.id} value={value.id}>\r\n                {value.size}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        {/* アイテムの製造国フィールド */}\r\n        <Form.Item\r\n          label={I18n.t(\"item.itemCountry\")}\r\n          name=\"country\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: I18n.t(\"validation.message\"),\r\n            },\r\n          ]}\r\n        >\r\n          <Input style={{ width: \"60%\" }} />\r\n        </Form.Item>\r\n\r\n        {/* 会社リストフィールド */}\r\n        <Form.Item\r\n          label={I18n.t(\"item.company\")}\r\n          name=\"company_name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: I18n.t(\"validation.message\"),\r\n            },\r\n          ]}\r\n        >\r\n          <Search\r\n            allowClear\r\n            enterButton=\"検索\"\r\n            size=\"medium\"\r\n            style={{ width: \"60%\" }}\r\n            onSearch={handleSelect.bind(this)}\r\n          />\r\n        </Form.Item>\r\n\r\n        {/* 製造日フィールド */}\r\n        {/* <Form.Item label={I18n.t(\"item.itemDate\")} name=\"manafacture_date\">\r\n          <DatePicker\r\n            disabledDate={disabledDate}\r\n            style={{ width: \"60%\" }}\r\n            placeholder=\"日付を選択してください\"\r\n          />\r\n        </Form.Item> */}\r\n\r\n        {/* メールフィールド */}\r\n        <Form.Item\r\n          label={I18n.t(\"item.email\")}\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: I18n.t(\"validation.email\"),\r\n            },\r\n            {\r\n              required: true,\r\n              message: I18n.t(\"validation.message\"),\r\n            },\r\n          ]}\r\n        >\r\n          <Input style={{ width: \"60%\" }} />\r\n        </Form.Item>\r\n\r\n        {/* リマークフィールド */}\r\n        <Form.Item\r\n          label={I18n.t(\"item.remark\")}\r\n          name=\"remark\"\r\n          rules={[\r\n            {\r\n              max: 20,\r\n              message: I18n.t(\"validation.remark\"),\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea style={{ width: \"60%\", resize: \"none\" }} />\r\n        </Form.Item>\r\n\r\n        {/* companiesのテーブルIDを運ぶ */}\r\n        <Form.Item label=\" \" name=\"company_id\" style={{ display: \"none\" }}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/* 保存ボタン */}\r\n        <Form.Item wrapperCol={{ offset: 6 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {I18n.t(\"common.button.save\")}\r\n          </Button>\r\n          {/* Excelファイルを出すボタン */}\r\n          <Button\r\n            style={{ marginLeft: 30 }}\r\n            type=\"primary\"\r\n            htmlType=\"button\"\r\n            onClick={excelExport}\r\n          >\r\n            {I18n.t(\"common.button.excel-export\")}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      {/* ポップアップモーダル */}\r\n      <Modal\r\n        title=\"会社一連\"\r\n        visible={isModalVisible}\r\n        // モーダルフォームを閉じる機能を呼び出す。\r\n        onOk={handleOk}\r\n        // モーダルフォームを閉じる機能を呼び出す。\r\n        onCancel={handleCancel}\r\n        footer={[<Button onClick={handleCancel}>オーケー</Button>]}\r\n      >\r\n        {/* 検索入力フィールドを設定する */}\r\n        {searchField}\r\n        <br></br>\r\n        {/* popupに表示するテーブルリスト */}\r\n        <Table\r\n          columns={hello()}\r\n          dataSource={tableData}\r\n          pagination={{ pageSize: 5 }}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemForm;\r\n"]},"metadata":{},"sourceType":"module"}